name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read        # needed for actions/checkout
  packages: write       # needed if pushing Docker image
  security-events: write  # needed if uploading SARIF (e.g. for code scanning)

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Auto fix known vulnerabilities
      - name: Run npm audit fix
        run: npm audit fix || true

      # Run tests
      - name: Run tests
        run: npm test || echo "No test found"

      # # Run static analysis (semgrep)
      # - name: Run Semgrep
      #   uses: returntocorp/semgrep-action@v1
      #   with:
      #     config: "p/default"

      # # Run IaC scan (Checkov)
      # - name: Scan Terraform/IaC
      #   uses: bridgecrewio/checkov-action@master
      #   with:
      #     directory: .

      # Scan Dockerfile with Trivy
      - name: Scan Dockerfile with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          scan-ref: ./Dockerfile
          exit-code: "1" # Fail if vulnerabilities are found
          severity: "CRITICAL"

      # Docker Build
      - name: Build Docker image (tag with run number)
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nodeapp:${{ github.run_number }} .

      - name: Build Docker image (latest)
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nodeapp:latest .

      # Security scan with Trivy on built image
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/nodeapp:${{ github.run_number }}
          exit-code: "1" # Fail if vulnerabilities found
          severity: "CRITICAL"

      # Log in to Docker Hub
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Push image
    
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nodeapp:${{ github.run_number }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nodeapp:latest
